# Generated by Django 2.0 on 2018-06-27 13:56

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of Project class', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Config_IP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('VOIP_TEST_WAN_IP', 'VOIP_TEST_WAN_IP'), ('DATA_LAN_LAN_IP_1', 'DATA_LAN_LAN_IP_1'), ('DATA_LAN_LAN_IP_2', 'DATA_LAN_LAN_IP_2'), ('DATA_LAN_WLAN_2_4_Ghz_IP_1', 'DATA_LAN_WLAN_2_4_Ghz_IP_1'), ('DATA_LAN_WLAN_2_4_Ghz_IP_2', 'DATA_LAN_WLAN_2_4_Ghz_IP_2'), ('DATA_LAN_WLAN_5_Ghz_IP_1', 'DATA_LAN_WLAN_5_Ghz_IP_1'), ('DATA_LAN_WLAN_5_Ghz_IP_2', 'DATA_LAN_WLAN_5_Ghz_IP_2'), ('DATA_WAN_WLAN_5_Ghz_IP_1', 'DATA_WAN_WLAN_5_Ghz_IP_1'), ('DATA_WAN_WLAN_5_Ghz_IP_2', 'DATA_WAN_WLAN_5_Ghz_IP_2'), ('IPTV_WLAN_5_Ghz_1_IP', 'IPTV_WLAN_5_Ghz_1_IP'), ('IPTV_WLAN_5_Ghz_2_IP', 'IPTV_WLAN_5_Ghz_2_IP'), ('IPTV_LAN_IP', 'IPTV_LAN_IP'), ('WEBUI_IP', 'WEBUI_IP')], max_length=50, unique=True)),
                ('ip', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Config_time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_time', models.TimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('THROUGHPUT', 'THROUGHPUT'), ('PACKET_LOSS', 'PACKET_LOSS'), ('NUMBER_OF_CONNECTION', 'NUMBER_OF_CONNECTIONS'), ('PESQ_UPSTREAM', 'PESQ_UPSTREAM'), ('PESQ_DOWNSTREAM', 'PESQ_DOWNSTREAM'), ('ONE_WAY_DELAY_UPSTREAM', 'ONE_WAY_DELAY_UPSTREAM'), ('ONE_WAY_DELAY_DOWNSTREAM', 'ONE_WAY_DELAY_DOWNSTREAM'), ('N/A', 'N/A')], max_length=100, unique=True)),
                ('values', models.CharField(default='N/A', help_text='Value of one Metric', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Metric_Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('values', models.CharField(default='0', help_text='Values of one Metric', max_length=5000)),
                ('list_of_values', models.CharField(default='', help_text='Values of one Metric', max_length=5000)),
                ('project_name', models.CharField(max_length=100)),
                ('step_name', models.CharField(max_length=100)),
                ('test_name', models.CharField(max_length=100)),
                ('execution_date', models.DateTimeField(default=datetime.datetime(2018, 6, 27, 13, 56, 4, 725757))),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of project', max_length=200, unique=True)),
                ('classe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Robustness.Class')),
            ],
        ),
        migrations.CreateModel(
            name='Project_result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_result_id', models.CharField(help_text='ID', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Step', max_length=200, unique=True)),
                ('description', models.CharField(help_text='Short Description for Test', max_length=5000)),
                ('step_number', models.IntegerField(help_text='Number Of Step', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Step_Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Step', max_length=200)),
                ('description', models.CharField(help_text='Short Description for Test', max_length=5000)),
                ('step_number', models.IntegerField(help_text='Number Of Step')),
                ('state', models.CharField(default='Unfinished', help_text='State', max_length=200)),
                ('progress', models.CharField(default='0', help_text='progress', max_length=200)),
                ('metrics', models.CharField(default='N/A', help_text='metrics', max_length=200)),
                ('project_result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Robustness.Project_result')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Short Description for Test ', max_length=5000)),
                ('name', models.CharField(choices=[('VoIP', 'VoIP'), ('DATA_LAN_LAN', 'DATA_LAN_LAN'), ('DATA_LAN_WLAN_2_4_Ghz', 'DATA_LAN_WLAN_2_4_Ghz'), ('DATA_LAN_WLAN_5_Ghz', 'DATA_LAN_WLAN_5_Ghz'), ('DATA_WAN_WLAN_5_Ghz', 'DATA_WAN_WLAN_5_Ghz'), ('1xIPTV_WLAN_5_Ghz', '1xIPTV_WLAN_5_Ghz'), ('2xIPTV_WLAN_5_Ghz', '2xIPTV_WLAN_5_Ghz'), ('P2P_WLAN_5_Ghz', 'P2P_WLAN_5_Ghz'), ('2xIPTV_LAN', '2xIPTV_LAN'), ('WEBUI', 'WEBUI')], max_length=50, unique=True)),
                ('metrics', models.ManyToManyField(to='Robustness.Metric')),
            ],
        ),
        migrations.CreateModel(
            name='Test_Result',
            fields=[
                ('name', models.CharField(help_text='Name of the Test ', max_length=200)),
                ('test_id', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(default='Unfinished', help_text='State', max_length=200)),
                ('progress', models.CharField(default='0', help_text='progress', max_length=200)),
                ('metrics', models.ManyToManyField(to='Robustness.Metric_Result')),
            ],
        ),
        migrations.AddField(
            model_name='step_result',
            name='test_result',
            field=models.ManyToManyField(to='Robustness.Test_Result'),
        ),
        migrations.AddField(
            model_name='step',
            name='tests',
            field=models.ManyToManyField(to='Robustness.Test'),
        ),
    ]
